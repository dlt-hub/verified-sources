"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _Op:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _OpEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Op.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    UNKNOWN: _Op.ValueType  # -1
    INSERT: _Op.ValueType  # 0
    UPDATE: _Op.ValueType  # 1
    DELETE: _Op.ValueType  # 2
    BEGIN: _Op.ValueType  # 3
    COMMIT: _Op.ValueType  # 4

class Op(_Op, metaclass=_OpEnumTypeWrapper): ...

UNKNOWN: Op.ValueType  # -1
INSERT: Op.ValueType  # 0
UPDATE: Op.ValueType  # 1
DELETE: Op.ValueType  # 2
BEGIN: Op.ValueType  # 3
COMMIT: Op.ValueType  # 4
global___Op = Op

@typing.final
class Point(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    X_FIELD_NUMBER: builtins.int
    Y_FIELD_NUMBER: builtins.int
    x: builtins.float
    y: builtins.float
    def __init__(
        self,
        *,
        x: builtins.float | None = ...,
        y: builtins.float | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["x", b"x", "y", b"y"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["x", b"x", "y", b"y"]) -> None: ...

global___Point = Point

@typing.final
class DatumMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    COLUMN_NAME_FIELD_NUMBER: builtins.int
    COLUMN_TYPE_FIELD_NUMBER: builtins.int
    DATUM_INT32_FIELD_NUMBER: builtins.int
    DATUM_INT64_FIELD_NUMBER: builtins.int
    DATUM_FLOAT_FIELD_NUMBER: builtins.int
    DATUM_DOUBLE_FIELD_NUMBER: builtins.int
    DATUM_BOOL_FIELD_NUMBER: builtins.int
    DATUM_STRING_FIELD_NUMBER: builtins.int
    DATUM_BYTES_FIELD_NUMBER: builtins.int
    DATUM_POINT_FIELD_NUMBER: builtins.int
    DATUM_MISSING_FIELD_NUMBER: builtins.int
    column_name: builtins.str
    column_type: builtins.int
    datum_int32: builtins.int
    datum_int64: builtins.int
    datum_float: builtins.float
    datum_double: builtins.float
    datum_bool: builtins.bool
    datum_string: builtins.str
    datum_bytes: builtins.bytes
    datum_missing: builtins.bool
    @property
    def datum_point(self) -> global___Point: ...
    def __init__(
        self,
        *,
        column_name: builtins.str | None = ...,
        column_type: builtins.int | None = ...,
        datum_int32: builtins.int | None = ...,
        datum_int64: builtins.int | None = ...,
        datum_float: builtins.float | None = ...,
        datum_double: builtins.float | None = ...,
        datum_bool: builtins.bool | None = ...,
        datum_string: builtins.str | None = ...,
        datum_bytes: builtins.bytes | None = ...,
        datum_point: global___Point | None = ...,
        datum_missing: builtins.bool | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["column_name", b"column_name", "column_type", b"column_type", "datum", b"datum", "datum_bool", b"datum_bool", "datum_bytes", b"datum_bytes", "datum_double", b"datum_double", "datum_float", b"datum_float", "datum_int32", b"datum_int32", "datum_int64", b"datum_int64", "datum_missing", b"datum_missing", "datum_point", b"datum_point", "datum_string", b"datum_string"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["column_name", b"column_name", "column_type", b"column_type", "datum", b"datum", "datum_bool", b"datum_bool", "datum_bytes", b"datum_bytes", "datum_double", b"datum_double", "datum_float", b"datum_float", "datum_int32", b"datum_int32", "datum_int64", b"datum_int64", "datum_missing", b"datum_missing", "datum_point", b"datum_point", "datum_string", b"datum_string"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["datum", b"datum"]) -> typing.Literal["datum_int32", "datum_int64", "datum_float", "datum_double", "datum_bool", "datum_string", "datum_bytes", "datum_point", "datum_missing"] | None: ...

global___DatumMessage = DatumMessage

@typing.final
class TypeInfo(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    MODIFIER_FIELD_NUMBER: builtins.int
    VALUE_OPTIONAL_FIELD_NUMBER: builtins.int
    modifier: builtins.str
    value_optional: builtins.bool
    def __init__(
        self,
        *,
        modifier: builtins.str | None = ...,
        value_optional: builtins.bool | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["modifier", b"modifier", "value_optional", b"value_optional"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["modifier", b"modifier", "value_optional", b"value_optional"]) -> None: ...

global___TypeInfo = TypeInfo

@typing.final
class RowMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TRANSACTION_ID_FIELD_NUMBER: builtins.int
    COMMIT_TIME_FIELD_NUMBER: builtins.int
    TABLE_FIELD_NUMBER: builtins.int
    OP_FIELD_NUMBER: builtins.int
    NEW_TUPLE_FIELD_NUMBER: builtins.int
    OLD_TUPLE_FIELD_NUMBER: builtins.int
    NEW_TYPEINFO_FIELD_NUMBER: builtins.int
    transaction_id: builtins.int
    commit_time: builtins.int
    table: builtins.str
    op: global___Op.ValueType
    @property
    def new_tuple(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DatumMessage]: ...
    @property
    def old_tuple(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DatumMessage]: ...
    @property
    def new_typeinfo(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___TypeInfo]: ...
    def __init__(
        self,
        *,
        transaction_id: builtins.int | None = ...,
        commit_time: builtins.int | None = ...,
        table: builtins.str | None = ...,
        op: global___Op.ValueType | None = ...,
        new_tuple: collections.abc.Iterable[global___DatumMessage] | None = ...,
        old_tuple: collections.abc.Iterable[global___DatumMessage] | None = ...,
        new_typeinfo: collections.abc.Iterable[global___TypeInfo] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["commit_time", b"commit_time", "op", b"op", "table", b"table", "transaction_id", b"transaction_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["commit_time", b"commit_time", "new_tuple", b"new_tuple", "new_typeinfo", b"new_typeinfo", "old_tuple", b"old_tuple", "op", b"op", "table", b"table", "transaction_id", b"transaction_id"]) -> None: ...

global___RowMessage = RowMessage
